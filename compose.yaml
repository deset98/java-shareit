services:
  db:
    image: postgres:16.1
    container_name: new-db-shareit
    ports:
      - "6432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=shareit
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=12345
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
    image: postgres:16.1
    container_name: new-db-init-shareit
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://user:12345@db:5432/shareit -v ON_ERROR_STOP=1 <<-EOSQL
        CREATE TABLE IF NOT EXISTS users (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
          name VARCHAR,
          email VARCHAR NOT NULL UNIQUE
        );
        
        CREATE TABLE IF NOT EXISTS items (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
          name VARCHAR,
          description VARCHAR,
          is_available BOOLEAN,
          owner_id BIGINT NOT NULL,
          request_id BIGINT NOT NULL,
          CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id),
          CONSTRAINT fk_items_to_requests FOREIGN KEY(request_id) REFERENCES users(id)
        );
        
        CREATE TABLE IF NOT EXISTS requests (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
          description VARCHAR,
          requester_id BIGINT NOT NULL,
          created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
          CONSTRAINT fk_requests_to_users FOREIGN KEY(requester_id) REFERENCES users(id)
        );
          
        CREATE TABLE IF NOT EXISTS bookings (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
          start_date TIMESTAMP WITHOUT TIME ZONE,
          end_date TIMESTAMP WITHOUT TIME ZONE,
          item_id BIGINT NOT NULL,
          booker_id BIGINT NOT NULL,
          status VARCHAR NOT NULL,
          CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id),
          CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id)
        );
        
        CREATE TABLE IF NOT EXISTS comments (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
          text VARCHAR,
          item_id BIGINT NOT NULL,
          author_id BIGINT NOT NULL,
          created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
          CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id),
          CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id)
        );
        EOSQL